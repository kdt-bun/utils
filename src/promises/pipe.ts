import { isNonEmptyArray } from '../arrays'

export async function pPipe(): Promise<void>
export async function pPipe<T>(fn: () => T | Promise<T>): Promise<T>
export async function pPipe<T1, T2>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>): Promise<T2>
export async function pPipe<T1, T2, T3>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>): Promise<T3>
export async function pPipe<T1, T2, T3, T4>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>): Promise<T4>
export async function pPipe<T1, T2, T3, T4, T5>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>): Promise<T5>
export async function pPipe<T1, T2, T3, T4, T5, T6>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>): Promise<T6>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>): Promise<T7>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>): Promise<T8>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>): Promise<T9>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>): Promise<T10>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>): Promise<T11>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>): Promise<T12>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>): Promise<T13>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>, fn14: (arg: T13) => T14 | Promise<T14>): Promise<T14>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>, fn14: (arg: T13) => T14 | Promise<T14>, fn15: (arg: T14) => T15 | Promise<T15>): Promise<T15>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>, fn14: (arg: T13) => T14 | Promise<T14>, fn15: (arg: T14) => T15 | Promise<T15>, fn16: (arg: T15) => T16 | Promise<T16>): Promise<T16>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>, fn14: (arg: T13) => T14 | Promise<T14>, fn15: (arg: T14) => T15 | Promise<T15>, fn16: (arg: T15) => T16 | Promise<T16>, fn17: (arg: T16) => T17 | Promise<T17>): Promise<T17>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>, fn14: (arg: T13) => T14 | Promise<T14>, fn15: (arg: T14) => T15 | Promise<T15>, fn16: (arg: T15) => T16 | Promise<T16>, fn17: (arg: T16) => T17 | Promise<T17>, fn18: (arg: T17) => T18 | Promise<T18>): Promise<T18>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>, fn14: (arg: T13) => T14 | Promise<T14>, fn15: (arg: T14) => T15 | Promise<T15>, fn16: (arg: T15) => T16 | Promise<T16>, fn17: (arg: T16) => T17 | Promise<T17>, fn18: (arg: T17) => T18 | Promise<T18>, fn19: (arg: T18) => T19 | Promise<T19>): Promise<T19>
export async function pPipe<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(fn1: () => T1 | Promise<T1>, fn2: (arg: T1) => T2 | Promise<T2>, fn3: (arg: T2) => T3 | Promise<T3>, fn4: (arg: T3) => T4 | Promise<T4>, fn5: (arg: T4) => T5 | Promise<T5>, fn6: (arg: T5) => T6 | Promise<T6>, fn7: (arg: T6) => T7 | Promise<T7>, fn8: (arg: T7) => T8 | Promise<T8>, fn9: (arg: T8) => T9 | Promise<T9>, fn10: (arg: T9) => T10 | Promise<T10>, fn11: (arg: T10) => T11 | Promise<T11>, fn12: (arg: T11) => T12 | Promise<T12>, fn13: (arg: T12) => T13 | Promise<T13>, fn14: (arg: T13) => T14 | Promise<T14>, fn15: (arg: T14) => T15 | Promise<T15>, fn16: (arg: T15) => T16 | Promise<T16>, fn17: (arg: T16) => T17 | Promise<T17>, fn18: (arg: T17) => T18 | Promise<T18>, fn19: (arg: T18) => T19 | Promise<T19>, fn20: (arg: T19) => T20 | Promise<T20>): Promise<T20>
export async function pPipe(...fns: CallableFunction[]): Promise<unknown>

export async function pPipe(...fns: CallableFunction[]) {
    if (!isNonEmptyArray(fns)) {
        return
    }

    if (fns.length === 1) {
        return await fns[0]()
    }

    let result = await fns[0]()

    for (let i = 1; i < fns.length; i++) {
        result = await fns[i](result)
    }

    return result
}
